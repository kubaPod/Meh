Notebook[{

Cell[CellGroupData[{
Cell["Meh", "Title",ExpressionUUID->"c893238b-fc00-4d22-8d3f-17b9c649a6b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletDirectoryAdd", " ", "@", " ", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"1486e51e-309d-4292-8b01-e4b10078e779"],

Cell[BoxData[
 RowBox[{"{", "\<\"E:\\\\Idea Projects\\\\Meh\\\\\"\>", "}"}]], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"c80eb4e9-f0ac-4027-8417-b375cef137fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", " ", "@", " ", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"0c7abb7b-3dc3-4128-9afe-7a43492cd48c"],

Cell[BoxData["\<\"E:\\\\Idea Projects\\\\Meh\"\>"], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"53b9501e-1d0b-4093-b2ed-f40d2ce24356"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "Meh`"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"63f4d4f0-5092-4b69-8a08-9bfe696193b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"report", " ", "=", 
  RowBox[{
  "TestReport", "[", " ", "\"\<Tests/MehTest.wl\>\"", " ", "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"69b91f91-d5c0-467d-affa-c2ff9733acab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: MehTest.wl\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["51", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Test Report: MehTest.wl\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["51", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["51", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed with errors: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[
   Association[
   "Title" -> "Test Report: MehTest.wl", "TimeElapsed" -> 
    Quantity[1.6400000000000001`, "Seconds"], "TestsSucceededCount" -> 51, 
    "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
    "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
    "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 1, "TestID" -> None, "Outcome" -> 
         "Success", "Input" -> HoldForm[
           Map[Meh`MFailureQ, {$Failed, $Aborted, $Canceled, 
             Failure["any", "Message" -> "Generic message"]}]], 
         "ExpectedOutput" -> HoldForm[{True, True, True, True}], 
         "ActualOutput" -> HoldForm[{True, True, True, True}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[688, "Bytes"]]], 2 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
         "cdeccebc-bfed-446e-a7ce-58e8a0ae48cc", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Map[Meh`MThrow, {$Failed, $Canceled, $Aborted}]]], 
         "ExpectedOutput" -> HoldForm[$Failed], "ActualOutput" -> 
         HoldForm[$Failed], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[392, "Bytes"]]], 3 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
         "e2481006-2edb-4efe-964d-24c0ab93a453", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Map[
            Composition[
            Meh`MCatch, Meh`MThrow], {$Failed, $Canceled, $Aborted, 
             Failure[], 
             Failure["General", 
              Association[
              "MessageTemplate" -> "``", 
               "MessageParameters" -> {1}]], $CellContext`whatever}]], 
         "ExpectedOutput" -> HoldForm[{$Failed, $Canceled, $Aborted, 
            Failure[], 
            Failure["General", 
             Association[
             "MessageTemplate" -> "``", 
              "MessageParameters" -> {1}]], $CellContext`whatever}], 
         "ActualOutput" -> HoldForm[{$Failed, $Canceled, $Aborted, 
            Failure[], 
            Failure["General", 
             Association[
             "MessageTemplate" -> "``", 
              "MessageParameters" -> {1}]], $CellContext`whatever}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[576, "Bytes"]]], 4 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
         "83b0a819-0923-4bf3-b15a-f0ea5c20943d", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow[
             Failure["tag", 
              Association["Message" -> "static"]]]]], "ExpectedOutput" -> 
         HoldForm[
           Failure["tag", 
            Association["Message" -> "static"]]], "ActualOutput" -> HoldForm[
           Failure["tag", 
            Association["Message" -> "static"]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[400, "Bytes"]]], 5 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
         "28fd432a-0c96-4e40-96e3-102c265be76a", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MGenerateFailure["invalid", "string"]], "ExpectedOutput" -> 
         HoldForm[
           Failure["argpatt", 
            Association[
            "Message" -> 
             "There are no rules associated with signature \
MGenerateFailure[String, String]."]]], "ActualOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "Message" -> 
             "There are no rules associated with signature \
MGenerateFailure[String, String]."]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[Meh`MGenerateFailure, "argpatt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[Meh`MGenerateFailure, "argpatt"], 
             "MGenerateFailure[String, String]"]]}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[12208, "Bytes"]]], 
      6 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
         "7227a794-ecd5-49aa-8bc0-58c2665f4060", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MGenerateFailure[
           "should act as an Identity for a single argument"]], 
         "ExpectedOutput" -> 
         HoldForm["should act as an Identity for a single argument"], 
         "ActualOutput" -> 
         HoldForm["should act as an Identity for a single argument"], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 7 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
         "eb78016c-3cab-4629-b789-d38e94a4679d", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MGenerateFailure[$Aborted]], "ExpectedOutput" -> 
         HoldForm[$Aborted], "ActualOutput" -> HoldForm[$Aborted], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 8 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
         "c920935d-ce0b-4b44-b0e7-949d4883e3b4", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrowAll["invalid", "string"]]], "ExpectedOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "Message" -> 
             "There are no rules associated with signature \
MGenerateAll[String, String]."]]], "ActualOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "Message" -> 
             
             "There are no rules associated with signature \
MGenerateAll[String, String]."]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[Meh`MGenerateAll, "argpatt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[Meh`MGenerateAll, "argpatt"], 
             "MGenerateAll[String, String]"]]}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1008, "Bytes"]]], 
      9 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
         "d1155b30-e4ea-481e-a660-acce042b5ff2", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MGenerateAll[
            MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]], 
         "ExpectedOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ActualOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ExpectedMessages" -> {
           HoldForm[
            MessageName[General, "argt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]}, 
         "AbsoluteTimeUsed" -> Quantity[0.005`4.849485002168007, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[38432, "Bytes"]]], 10 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
         "mthrow-messagename-argumentsfree", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Meh`MCatch[
            Meh`MThrow[
             MessageName[General, "argpatt"]]]], "ExpectedOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argpatt"], 
             "MessageParameters" -> {}]]], "ActualOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argpatt"], 
             "MessageParameters" -> {}]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[488, "Bytes"]]], 
      11 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
         "2f9c8c4a-3296-488e-9c88-a57174cb1839", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow[
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]], 
         "ExpectedOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ActualOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[624, "Bytes"]]], 
      12 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
         "c51e6c29-02b4-45d4-999e-9ef8364a3afc", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrowAll[
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]], 
         "ExpectedOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ActualOutput" -> HoldForm[
           Failure["argt", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ExpectedMessages" -> {
           HoldForm[
            MessageName[General, "argt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[880, "Bytes"]]], 13 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
         "ed8d64e4-75b0-4c68-bda0-fc635786a82f", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow["custom tag", 
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]], 
         "ExpectedOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ActualOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[560, "Bytes"]]], 
      14 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
         "568d41cf-8ee3-4805-a223-fc8346d00ba4", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrowAll["custom tag", 
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]], 
         "ExpectedOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ActualOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}]]], 
         "ExpectedMessages" -> {
           HoldForm[
            MessageName[General, "argt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4]]}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[880, "Bytes"]]], 15 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
         "1b2f7ddc-b2f7-42bb-82a4-de304864bedd", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow[
             MessageName[$CellContext`foo, "argx"], 
             Association["arg" -> $CellContext`bar]]]], "ExpectedOutput" -> 
         HoldForm[
           Failure["argx", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar]]]],
          "ActualOutput" -> HoldForm[
           Failure["argx", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar]]]],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[704, "Bytes"]]], 16 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
         "34f9f256-3b1f-41ad-b584-76864bb1b39b", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow[$CellContext`bar, 
             MessageName[$CellContext`foo, "argx"], 
             Association["arg" -> $CellContext`bar]]]], "ExpectedOutput" -> 
         HoldForm[
           Failure[$CellContext`bar, 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar]]]],
          "ActualOutput" -> HoldForm[
           Failure[$CellContext`bar, 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar]]]],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[704, "Bytes"]]], 17 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
         "d4b3e988-550f-4fe5-9212-c7ffc737c2b3", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow[$CellContext`bar, 
             MessageName[$CellContext`foo, "argx"], 
             Association["arg" -> $CellContext`bar], 
             Association["Payload" -> "additional information"]]]], 
         "ExpectedOutput" -> HoldForm[
           Failure[$CellContext`bar, 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar], 
             "Payload" -> "additional information"]]], "ActualOutput" -> 
         HoldForm[
           Failure[$CellContext`bar, 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argx"], 
             "MessageParameters" -> Association["arg" -> $CellContext`bar], 
             "Payload" -> "additional information"]]], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[776, "Bytes"]]], 
      18 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
         "1a6f5d87-c8ec-4dda-b0b3-efcd7e9cd443", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrow["custom tag", 
             MessageName[General, "argt"], $CellContext`foo, 2, 3, 4, 
             Association["Payload" -> "additional information"]]]], 
         "ExpectedOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}, "Payload" -> 
             "additional information"]]], "ActualOutput" -> HoldForm[
           Failure["custom tag", 
            Association[
            "MessageTemplate" :> MessageName[General, "argt"], 
             "MessageParameters" -> {$CellContext`foo, 2, 3, 4}, "Payload" -> 
             "additional information"]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[632, "Bytes"]]], 
      19 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
         "bf83f8f6-2d77-47b2-96b0-7dc4750e778d", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[Meh`MHandleResult[][$Aborted]; 1]], "ExpectedOutput" -> 
         HoldForm[$Aborted], "ActualOutput" -> HoldForm[$Aborted], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[328, "Bytes"]]], 
      20 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
         "aa27e31c-8219-4ecb-861c-0b36c679cf74", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MHandleResult[
             Except[
              Blank[String]], 
             Function[$CellContext`res, 
              Meh`MThrow[
               MessageName[$CellContext`foo, "string"], 
               Head[$CellContext`res], 
               Blank[String]]]][{"string"}]]], "ExpectedOutput" -> HoldForm[
           Failure["string", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ActualOutput" -> HoldForm[
           Failure["string", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[776, "Bytes"]]], 
      21 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
         "1754dc50-0240-492f-8a31-10ca32b964cd", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MHandleResult[
             Except[
              Blank[String]], 
             Function[$CellContext`res, 
              Meh`MThrowAll[
               MessageName[$CellContext`foo, "string"], 
               Head[$CellContext`res], 
               Blank[String]]]][{"string"}]]], "ExpectedOutput" -> HoldForm[
           Failure["string", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ActualOutput" -> HoldForm[
           Failure["string", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "string"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "string"], List, 
             Blank[String]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1040, "Bytes"]]], 
      22 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
         "1754dc50-0240-492f-8a31-10ca32b964cd", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MHandleResult[
             Except[
              Blank[String]], 
             Function[$CellContext`res, 
              Meh`MThrowAll[
               MessageName[$CellContext`foo, "string"], 
               Head[$CellContext`res], 
               Blank[String]]]]["string"]]], "ExpectedOutput" -> 
         HoldForm["string"], "ActualOutput" -> HoldForm["string"], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[400, "Bytes"]]], 
      23 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 23, "TestID" -> 
         "1754dc50-0240-492f-8a31-10ca32b964cd", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MHandleResult[
             Except[
              Blank[String]], 
             Function[$CellContext`res, 
              Meh`MThrowAll["500", 
               MessageName[$CellContext`foo, "string"], 
               Head[$CellContext`res], 
               Blank[String]]]]["string"]]], "ExpectedOutput" -> 
         HoldForm["string"], "ActualOutput" -> HoldForm["string"], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[328, "Bytes"]]], 
      24 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
         "1754dc50-0240-492f-8a31-10ca32b964cd", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MHandleResult[
             Except[
              Blank[String]], 
             Function[$CellContext`res, 
              Meh`MThrowAll["500", 
               MessageName[$CellContext`foo, "string"], 
               Head[$CellContext`res], 
               Blank[String]]]][{"string"}]]], "ExpectedOutput" -> HoldForm[
           Failure["500", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ActualOutput" -> HoldForm[
           Failure["500", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "string"], 
             "MessageParameters" -> {List, 
               Blank[String]}]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "string"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "string"], List, 
             Blank[String]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.001`4.150514997831987, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1040, "Bytes"]]], 
      25 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 25, "TestID" -> 
         "846538e8-04f2-4f8a-baf5-afa5b6656990", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MOnFailure[List][$Failed]], "ExpectedOutput" -> 
         HoldForm[{$Failed}], "ActualOutput" -> HoldForm[{$Failed}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[144, "Bytes"]]], 
      26 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 26, "TestID" -> 
         "846538e8-04f2-4f8a-baf5-afa5b6656991", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MOnFailure[List][{}]], "ExpectedOutput" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 27 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 27, "TestID" -> 
         "846538e8-04f2-4f8a-baf5-afa5b6656992", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MOnFailure[Meh`MThrow][$Failed]]], "ExpectedOutput" -> 
         HoldForm[$Failed], "ActualOutput" -> HoldForm[$Failed], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 28 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 28, "TestID" -> 
         "846538e8-04f2-4f8a-baf5-afa5b6656993", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MCatch[
            Meh`MThrowOnFailure[$Failed]]], "ExpectedOutput" -> 
         HoldForm[$Failed], "ActualOutput" -> HoldForm[$Failed], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 29 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 29, "TestID" -> 
         "853f20f1-3739-4f66-8449-083b6593ad55", "Outcome" -> "Success", 
         "Input" -> HoldForm[$CellContext`foo[
              Pattern[$CellContext`x, 
               Blank[]]] := $CellContext`x^2; 
           Meh`MFailByDefault[$CellContext`foo]; $CellContext`foo[1, 2]], 
         "ExpectedOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argpatt"], 
             "MessageParameters" -> {"foo[Integer, Integer]"}]]], 
         "ActualOutput" -> HoldForm[
           Failure["argpatt", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "argpatt"], 
             "MessageParameters" -> {"foo[Integer, Integer]"}]]], 
         "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "argpatt"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "argpatt"], 
             "foo[Integer, Integer]"]]}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2472, "Bytes"]]], 
      30 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 30, "TestID" -> 
         "5c8421b7-0a3e-41d6-9c3e-d61554673ed1", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Block[{$CellContext`i = 0}, {
             Meh`MRetryOnFailure[
             Increment[$CellContext`i]; $Failed, 2], $CellContext`i}]], 
         "ExpectedOutput" -> HoldForm[{$Failed, 3}], "ActualOutput" -> 
         HoldForm[{$Failed, 3}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[152, "Bytes"]]], 
      31 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 31, "TestID" -> 
         "f51382ec-06d3-4e22-9c5f-227aa8ed6a8e", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Block[{$CellContext`i = 0}, {
             Meh`MRetryOnFailure[
             Increment[$CellContext`i]; $Failed], $CellContext`i}]], 
         "ExpectedOutput" -> HoldForm[{$Failed, 2}], "ActualOutput" -> 
         HoldForm[{$Failed, 2}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[216, "Bytes"]]], 
      32 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 32, "TestID" -> 
         "generic err ToHTTPResponse", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[$Failed]]], "ExpectedOutput" -> 
         HoldForm[{
            Association[
            "Message" -> "$Failed", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "$Failed", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[1.432`7.306458015803824, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.9200000000000003, "Seconds"], "MemoryUsed" -> 
         Quantity[16789792, "Bytes"]]], 33 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 33, "TestID" -> 
         "failure with status code ToHTTPResponse", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[
             Failure["404", 
              Association["MessageTemplate" -> "test 404"]]]]], 
         "ExpectedOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.002`4.451544993495968, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[7896, "Bytes"]]], 
      34 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 34, "TestID" -> 
         "message list capturing for ToHTTPResponse", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[1/0; Failure["404", 
               Association["MessageTemplate" -> "test 404"]]]]], 
         "ExpectedOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{Power::infy}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{Power::infy}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {
           HoldForm[
            MessageName[Power, "infy"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[Power, "infy"], 
             HoldForm[0^(-1)]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.007`4.995613037846244, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[43928, "Bytes"]]], 
      35 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 35, "TestID" -> 
         "Payload in ToHTTPResponse", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[1/0; Failure["404", 
               Association[
               "MessageTemplate" -> "test 404", "PageAddress" -> 
                "127.0.0.1"]]]]], "ExpectedOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association[
              "PageAddress" -> "127.0.0.1", "MessageList" -> 
               "{Power::infy}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association[
              "PageAddress" -> "127.0.0.1", "MessageList" -> 
               "{Power::infy}"]], 
            Association[
            "StatusCode" -> "404", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {
           HoldForm[
            MessageName[Power, "infy"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[Power, "infy"], 
             HoldForm[0^(-1)]]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.002`4.451544993495968, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[6352, "Bytes"]]], 
      36 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 36, "TestID" -> "symbol in tag", 
         "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[
             Failure[Symbol, 
              Association["MessageTemplate" -> "test 404"]]]]], 
         "ExpectedOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.002`4.451544993495968, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.01499999999999968, "Seconds"], "MemoryUsed" -> 
         Quantity[5440, "Bytes"]]], 37 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 37, "TestID" -> 
         "any string in tag", "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`previewHTTPResponse[
            Meh`MFailureToHTTPResponse[
             Failure["any string", 
              Association["MessageTemplate" -> "test 404"]]]]], 
         "ExpectedOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ActualOutput" -> HoldForm[{
            Association[
            "Message" -> "test 404", "Payload" -> 
             Association["MessageList" -> "{}"]], 
            Association[
            "StatusCode" -> "500", "ContentType" -> "application/json"], 
            CharacterEncoding -> None}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001`4.150514997831987, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1408, "Bytes"]]], 
      38 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 38, "TestID" -> 
         "basic validation test true", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Apply[Meh`MValidate, $CellContext`$basicValidationTestTrue]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[1448, "Bytes"]]], 39 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 39, "TestID" -> 
         "basic MValidate test false", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Apply[Meh`MValidate, $CellContext`$basicValidationTestFalse]], 
         "ExpectedOutput" -> HoldForm[
           Failure["Invalid", 
            Association[
            "MessageTemplate" :> MessageName[Meh`MValidate, "Invalid"], 
             "MessageParameters" -> {}, "InvalidContents" -> {{
                 Key["a"], 
                 Key["c"]} -> Meh`MValidationResult[False, Integer], {
                 Key["a"], 
                 Key["d"]} -> Meh`MValidationResult[False, Integer]}]]], 
         "ActualOutput" -> HoldForm[
           Failure["Invalid", 
            Association[
            "MessageTemplate" :> MessageName[Meh`MValidate, "Invalid"], 
             "MessageParameters" -> {}, "InvalidContents" -> {{
                 Key["a"], 
                 Key["c"]} -> Meh`MValidationResult[False, Integer], {
                 Key["a"], 
                 Key["d"]} -> Meh`MValidationResult[False, Integer]}]]], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2808, "Bytes"]]], 
      40 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 40, "TestID" -> 
         "basic MValidate invalid contents", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           (Part[#, 2, "InvalidContents"]& )[
            Apply[Meh`MValidate, $CellContext`$basicValidationTestFalse]]], 
         "ExpectedOutput" -> HoldForm[{{
              Key["a"], 
              Key["c"]} -> Meh`MValidationResult[False, Integer], {
              Key["a"], 
              Key["d"]} -> Meh`MValidationResult[False, Integer]}], 
         "ActualOutput" -> HoldForm[{{
              Key["a"], 
              Key["c"]} -> Meh`MValidationResult[False, Integer], {
              Key["a"], 
              Key["d"]} -> Meh`MValidationResult[False, Integer]}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2624, "Bytes"]]], 
      41 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 41, "TestID" -> 
         "basic MValidQ test true", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Apply[Meh`MValidQ, $CellContext`$basicValidationTestTrue]], 
         "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[328, "Bytes"]]], 42 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 42, "TestID" -> 
         "basic MValidQ test false", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Apply[Meh`MValidQ, $CellContext`$basicValidationTestFalse]], 
         "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
         HoldForm[False], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0.001`4.150514997831987, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[168, "Bytes"]]], 43 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 43, "TestID" -> 
         "empty unmatched contents", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           Apply[
           Meh`MInvalidContents, $CellContext`$basicValidationTestTrue]], 
         "ExpectedOutput" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001`4.150514997831987, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 44 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 44, "TestID" -> 
         "basic non empty unmatched contents", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Apply[
           Meh`MInvalidContents, $CellContext`$basicValidationTestFalse]], 
         "ExpectedOutput" -> HoldForm[{{
              Key["a"], 
              Key["c"]} -> Meh`MValidationResult[False, Integer], {
              Key["a"], 
              Key["d"]} -> Meh`MValidationResult[False, Integer]}], 
         "ActualOutput" -> HoldForm[{{
              Key["a"], 
              Key["c"]} -> Meh`MValidationResult[False, Integer], {
              Key["a"], 
              Key["d"]} -> Meh`MValidationResult[False, Integer]}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[680, "Bytes"]]], 
      45 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 45, "TestID" -> 
         "validate scan for equal length lists", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Meh`MInvalidContents[
            Part[$CellContext`$basicValidationTestTrue, {1, 1, 1, 1}], 
            ReplaceAll[
             Part[$CellContext`$basicValidationTestTrue, {1, 1, 1, 1}], 
             Association -> Composition[KeyValuePattern, List]]]], 
         "ExpectedOutput" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 46 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 46, "TestID" -> 
         "basic arg validation true", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           $CellContext`foo[
            Association["a" -> 1, "c" -> "String"]]], "ExpectedOutput" -> 
         HoldForm[1], "ActualOutput" -> HoldForm[1], "ExpectedMessages" -> {},
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 47 -> 
      TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 47, "TestID" -> 
         "basic arg validation false", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           $CellContext`foo[
            Association["b" -> 1, "c" -> {1}]]], "ExpectedOutput" -> HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "InvalidArg"], 
             "MessageParameters" -> {
              1, "\t{Key[c]}\tList\n\t{Key[a]}\tMissing[]", 
               "\t<|a -> _Integer, c -> _String|>"}]]], "ActualOutput" -> 
         HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "InvalidArg"], 
             "MessageParameters" -> {
              1, "\t{Key[c]}\tList\n\t{Key[a]}\tMissing[]", 
               "\t<|a -> _Integer, c -> _String|>"}]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "InvalidArg"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "InvalidArg"], 1, 
             "\t{Key[c]}\tList\n\t{Key[a]}\tMissing[]", 
             "\t<|a -> _Integer, c -> _String|>"]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.001`4.150514997831987, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[39864, "Bytes"]]], 
      48 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 48, "TestID" -> 
         "basic arbitrary arg validation false", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           $CellContext`foo[1, 2]], "ExpectedOutput" -> HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "InvalidArg"], 
             "MessageParameters" -> {
              1, "\t{}\tInteger", "\t<|a -> _Integer, c -> _String|>"}]]], 
         "ActualOutput" -> HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "InvalidArg"], 
             "MessageParameters" -> {
              1, "\t{}\tInteger", "\t<|a -> _Integer, c -> _String|>"}]]], 
         "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "InvalidArg"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "InvalidArg"], 1, "\t{}\tInteger", 
             "\t<|a -> _Integer, c -> _String|>"]]}, "AbsoluteTimeUsed" -> 
         Quantity[0.001`4.150514997831987, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1544, "Bytes"]]], 
      49 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 49, "TestID" -> 
         "no arguments validation", "Outcome" -> "Success", "Input" -> 
         HoldForm[
           $CellContext`foo[]], "ExpectedOutput" -> HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "NoArg"], 
             "MessageParameters" -> {$CellContext`foo}]]], "ActualOutput" -> 
         HoldForm[
           Failure["400", 
            Association[
            "MessageTemplate" :> MessageName[$CellContext`foo, "NoArg"], 
             "MessageParameters" -> {$CellContext`foo}]]], "ExpectedMessages" -> {
           HoldForm[
            MessageName[$CellContext`foo, "NoArg"]]}, "ActualMessages" -> {
           HoldForm[
            Message[
             MessageName[$CellContext`foo, "NoArg"], $CellContext`foo]]}, 
         "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
         "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
         Quantity[776, "Bytes"]]], 50 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 50, "TestID" -> 
         "6b3e93c2-201e-43ab-aaec-a9a5dd7c6276", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           Block[{$CellContext`x = 1, $CellContext`y = 2}, 
            Meh`ToKeyValue[{$CellContext`x, $CellContext`y}]]], 
         "ExpectedOutput" -> HoldForm[{"x" -> 1, "y" -> 2}], "ActualOutput" -> 
         HoldForm[{"x" -> 1, "y" -> 2}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1808, "Bytes"]]], 
      51 -> TestResultObject[
        Association[
        "TestClass" -> None, "TestIndex" -> 51, "TestID" -> 
         "95412c7c-42f7-46f8-a5a5-7fcc3819dd28", "Outcome" -> "Success", 
         "Input" -> HoldForm[
           
           Module[{$CellContext`x = 1, $CellContext`y = 2, $CellContext`z = 
             "string"}, 
            
            Meh`ToKeyValue[{$CellContext`x, $CellContext`y, \
$CellContext`z}]]], "ExpectedOutput" -> 
         HoldForm[{"x" -> 1, "y" -> 2, "z" -> "string"}], "ActualOutput" -> 
         HoldForm[{"x" -> 1, "y" -> 2, "z" -> "string"}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[424, "Bytes"]]]], 
    "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
     33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
     51}, "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
    "TestsFailedWithMessagesIndices" -> {}, 
    "TestsFailedWithErrorsIndices" -> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"0d0f17d9-ba5d-4a37-9bdb-538ca085f534"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"report", "[", "\"\<TestsFailed\>\"", "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"9392d9b2-719f-4c35-a8f3-c7871ede2108"],

Cell[BoxData[
 RowBox[{"SystemOpen", "@", "\"\<Tests/MehTest.wl\>\""}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"909a7b21-f032-4674-a72d-b809daba1f58"],

Cell[BoxData["d"], \
"Input",ExpressionUUID->"ef3d6518-04b6-4f84-a61c-8e34e22fd480"],

Cell[BoxData["L"], \
"Input",ExpressionUUID->"a3c79905-2c80-459b-858c-33710702d0ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogDialogBlock", "[", 
   RowBox[{"\"\<test\>\"", "\[IndentingNewLine]", ",", 
    RowBox[{"\"\<Header\>\"", " ", "\[Rule]", " ", 
     RowBox[{"Item", "[", 
      RowBox[{"\"\<Lecture deployment\>\"", ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Center", ",", "Center"}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", " ", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Roboto\>\""}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"\"\<AutoClose\>\"", "\[Rule]", ".5"}]}], "*)"}], 
   "\[IndentingNewLine]", "]"}], "@", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pause", "[", "1", "]"}], ";", 
        RowBox[{"LogWrite", "[", 
         RowBox[{"RandomReal", "[", "]"}], "]"}]}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"c861fafb-bf7d-4412-b40f-40c7d8ddeb81"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LogDialogProgressIndicator", "[", 
    RowBox[{"\"\<test\>\"", ",", "True"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], \
"Input",ExpressionUUID->"eb3cb2d2-b789-4a82-8fb5-3aafddc9db38"],

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"List", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "2"}]}], "|>"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"KeyValuePattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "_Integer"}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "_String"}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", "_Symbol"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"990acfa2-b4be-483d-a4ac-ce7211714273"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Extract", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Position", "[", 
       RowBox[{"#", ",", 
        RowBox[{"MatchedElement", "[", 
         RowBox[{"False", ",", "_"}], "]"}]}], "]"}]}], "]"}], "&"}], "[", 
   "\[IndentingNewLine]", 
   RowBox[{"StructMatch", "@@", "test"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"2fc0186d-d6ce-4b5c-a239-c4fcc22f3501"],

Cell[BoxData["Strict"], \
"Input",ExpressionUUID->"85653ddc-4221-47a8-953f-ff017d5444d8"],

Cell[BoxData[
 RowBox[{"KeyValuePattern", "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", "Strict"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"2f2e39c9-4c39-4605-a65a-fa8435925bb6"],

Cell[BoxData["OrderlessPatternSequence"], \
"Input",ExpressionUUID->"59f77318-894d-4060-8a51-765a1f5b92b4"],

Cell[BoxData[
 RowBox[{"UnmatchedContents", "[", "\n", "  ", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{"\"\<a\>\"", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<b\>\"", " ", "->", " ", "2"}], ",", " ", 
       RowBox[{"\"\<c\>\"", "->", "3"}], ",", " ", 
       RowBox[{"\"\<d\>\"", " ", "->", " ", "4"}]}], "|>"}]}], "|>"}], "\n", 
   ",", " ", 
   RowBox[{"KeyValuePattern", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", " ", "->", " ", 
      RowBox[{"KeyValuePattern", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<b\>\"", " ", "->", " ", "_Integer"}], ",", " ", 
         RowBox[{"\"\<c\>\"", " ", "->", " ", "_String"}], ",", " ", 
         RowBox[{"\"\<d\>\"", " ", "->", " ", "_List"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], "  ", "\n", "]"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"3f9fe09f-f6df-47b3-8e5f-674e611ca5c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"#", "->", 
     RowBox[{"Extract", "[", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", "#"}], "]"}]}], "]"}], "&"}], "@", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", "_List"}], "]"}]}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"eff3d5e7-82ea-4349-a2d7-c68027166458"],

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"{", "All", "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"36922e87-9738-42a5-b4cd-ef70e657ff8f"],

Cell[BoxData["Position"], \
"Input",ExpressionUUID->"f7e62016-af2c-497e-b58c-52a6843a750e"],

Cell[BoxData[
 RowBox[{"PositionIndex", "//", "PrintDefinitions"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"885889d1-1522-4506-9575-29e5400d506c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"validate", "//", "ClearAll"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"validate", "::", "inv"}], "=", 
   "\"\<Invalid arguments:\\n``\\nInput needs to match:\\n``\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"validate", "/:", 
  RowBox[{"SetDelayed", "[", 
   RowBox[{
    RowBox[{"validate", "[", 
     RowBox[{"h_", "[", "args___", "]"}], "]"}], ",", "body_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", "args", "]"}], ":=", "body"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "[", "arg___", "]"}], ":=", 
     RowBox[{"MGenerateAll", "[", "\n", "      ", 
      RowBox[{"\"\<400\>\"", "\n", "    ", ",", " ", 
       RowBox[{"Meh", "::", "InvalidArg"}], "\n", "    ", ",", " ", "argPos", 
       "\n", "    ", ",", " ", 
       RowBox[{
        RowBox[{"MInvalidContents", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "input", "}"}], "[", 
           RowBox[{"[", "argPos", "]"}], "]"}], ",", " ", "structPattern", 
          ",", " ", "3"}], "]"}], " ", "//", " ", 
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{"#", ",", " ", "\"\<\\n\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\\t\>\"", ",", " ", "\"\<\\t\>\"", ",", " ", "\"\<\>\""}], 
            "}"}]}], "]"}], "&"}]}], "\n", "    ", ",", " ", 
       RowBox[{"\"\<\\t\>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"args", ",", "\"\<, \>\""}], "]"}], ",", "InputForm"}], 
         "]"}]}]}], "\n", "    ", "]"}]}]}], "\[IndentingNewLine]", 
   ")"}]}]}], "Input",ExpressionUUID->"ced6e289-b40c-42c8-a096-8f87d80ed96d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"foo", "//", "ClearAll"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"foo", "[", 
     RowBox[{"x_Integer", ",", "y_String"}], "]"}], "//", "validate"}], ":=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"d20659a6-7ad8-450b-8ad1-5639677cf9d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"6dcd0677-becf-4a09-a318-b1680bb9ce33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], "\[Rule]", 
   RowBox[{"MValidationResult", "[", 
    RowBox[{"False", ",", "Integer"}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"f987aca5-09fb-4cc5-8755-7c2810506c30"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{929, 1022},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
Magnification:>1.4 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (November 13, 2018)",
StyleDefinitions->"Default.nb"
]

